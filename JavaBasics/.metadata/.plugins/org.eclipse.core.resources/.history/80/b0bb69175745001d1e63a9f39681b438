package com.functional.interfaces;

import java.util.function.Predicate;

public class PredicateExample {
	
	public static Predicate<String> hasLength10 = new Predicate<String>() {
		@Override
		public boolean test(String t) {
			return t.length() > 10;
		}
	};
	
	public static void predicate_or() {
		Predicate<String> containsLetterA = p -> p.contains("A");
		String contains = "Aeroplane";
		boolean output = hasLength10.or(containsLetterA).test(contains);
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Predicate<Integer> isAnAdult = i -> (i > 18);
		
		Predicate<Integer> isUnderAged = i -> (i < 18);
		
		Predicate<Integer> isRetired = i -> (i > 60);
		
		boolean result = isAnAdult.and(isRetired).test(50);
		
//		System.out.println(result);
//		System.out.println(isUnderAged.test(15));
		hasLength10.test("HowareyouJava.");

	}

}
